@page "/manageOrganisation"

@using Blazored.SessionStorage
@using Prototype.Models
@using Prototype.Models.Rights
@inject NavigationManager Navigation
@inject ISessionStorageService SessionStorage



<PageTitle>Organisationsübersicht</PageTitle>

<h3>Organisationsübersicht</h3>
<p>Hier haben Sie eine Übersicht über Ihre Organisation.</p>

<div>
    <h4>Liste der Organisatoren</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Vorname</th>
                <th>Nachname</th>
                <th>E-Mail</th>
                <th>Entfernen</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var organizer in currentOrg.OrgAdmins)
            {
                <tr>
                    <td>@organizer.FirstName</td>
                    <td>@organizer.LastName</td>
                    <td>@organizer.eMail</td>
                    <td><button @onclick="RemoveOrganizer">Entfernen</button></td> <!--optional-->
                </tr>
            }
        </tbody>
    </table>
    <div>
        <h3>Organisator hinzufügen:</h3>
        <div class="d-flex">
            <p>E-Mail des Mitarbeiters</p>
            <InputText id="nameOrMail" @bind-Value="addMail" class="form-control" />
            <button @onclick="AddOrganizer">Organisator hinzufügen</button>
        </div>
    </div>

</div>



@code {
	private bool isLoggedIn;
	private Person currentUser;
	private string rightsType;
	private Rights authority = new Member();
	private Organization currentOrg = new Organization("", new Person("", ""));

	protected override async Task OnInitializedAsync()
	{
		isLoggedIn = await SessionStorage.GetItemAsync<bool>("isLoggedIn");
		if (!isLoggedIn)
		{
			Navigation.NavigateTo("/Login");
			return;
		}
		currentUser = await SessionStorage.GetItemAsync<Person>("user");
		rightsType = await SessionStorage.GetItemAsStringAsync("rightsType");
		if (rightsType == "Member")
		{
			authority = await SessionStorage.GetItemAsync<Member>("rights"); 
		}
		else if (rightsType == "Organizer")
		{
			authority = await SessionStorage.GetItemAsync<Organizer>("rights");
		}

		currentOrg = Application.Instance.GetOrganization(currentUser.OrganizationId);
	}


    private string addMail;

    private void AddOrganizer()
    {
        currentOrg.OrgAdmins.Add(Application.Instance.GetPerson(addMail));
    }

    private void RemoveOrganizer()
    {
	    currentOrg.OrgAdmins.Remove(Application.Instance.GetPerson(addMail));
    }
}
